---
port: 7890
socks-port: 7891
redir-port: 7892
tproxy-port: 7895
mixed-port: 7893
allow-lan: true
mode: script
log-level: info
ipv6: false
external-controller: 0.0.0.0:9090
external-ui: "/usr/share/openclash/dashboard"
dns:
  enable: true
  ipv6: false
  enhanced-mode: fake-ip
  listen: 127.0.0.1:7874
  fallback-filter:
    geoip: true
    geoip-code: ID
    ipcidr:
    - 0.0.0.0/8
    - 10.0.0.0/8
    - 100.64.0.0/10
    - 127.0.0.0/8
    - 169.254.0.0/16
    - 172.16.0.0/12
    - 192.0.0.0/24
    - 192.0.2.0/24
    - 192.88.99.0/24
    - 192.168.0.0/16
    - 198.18.0.0/15
    - 198.51.100.0/24
    - 203.0.113.0/24
    - 224.0.0.0/4
    - 240.0.0.0/4
    - 255.255.255.255/32
    domain:
    - "+.google.com"
    - "+.netflix.com"
    - "+.facebook.com"
    - "+.youtube.com"
    - "+.githubusercontent.com"
    - "+.googlevideo.com"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - msftconnecttest.com
    - msftncsi.com
  fake-ip-filter:
  - "+.pool.ntp.org"
  - ntp7.*.com
  - ntp6.*.com
  - ntp5.*.com
  - ntp4.*.com
  - ntp3.*.com
  - ntp2.*.com
  - ntp1.*.com
  - ntp.*.com
  - time7.*.com
  - time6.*.com
  - time5.*.com
  - time4.*.com
  - time3.*.com
  - time2.*.com
  - time1.*.com
  - time.*.apple.com
  - time.*.edu.cn
  - time.*.gov
  - time.*.com
  - "*.home.arpa"
  - "*.local"
  - "*.test"
  - "*.localhost"
  - "*.invalid"
  - "*.example"
  - "*.localdomain"
  - time1.cloud.tencent.com
  - "*.ntp.org"
  - "*.time.edu"
  - "*.lan"
  - "*.ntp.org.cn"
  - "*.time.edu.cn"
  fake-ip-range: 198.18.0.1/16
  default-nameserver:
  - 8.8.8.8
  - 8.8.4.4
  - 1.1.1.1
  - 1.0.0.1
  - 192.168.1.1
  - 192.168.8.1
  nameserver:
  - 192.168.1.1
  - 192.168.8.1
  - dhcp://"wlan0"
  - dhcp://"usb0"
  - 8.8.8.8
  - 8.8.4.4
  - https://dns.google/dns-query
  - tls://dns.google
proxy-providers:
  WAN-A:
    type: file
    path: "./proxy_provider/akun-master1.yaml"
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 99
  WAN-B:
    type: file
    path: "./proxy_provider/akun-master2.yaml"
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 99
proxy-groups:
- name: SIMASTER-V1.5
  type: load-balance
  strategy: round-robin
  disable-udp: false
  proxies:
  - WAN1
  - WAN2
  - PORT-GAME
  url: http://www.gstatic.com/generate_204
  interval: '99'
  interface-name: eth0
  routing-mark: '6666'
- name: WAN1
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  use:
  - WAN-A
  url: http://www.gstatic.com/generate_204
  interval: '99'
  interface-name: wlan0
  routing-mark: '2333'
- name: WAN2
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  use:
  - WAN-B
  url: http://www.gstatic.com/generate_204
  interval: '99'
  interface-name: usb0
  routing-mark: '2333'
- name: PORT-GAME
  type: select
  disable-udp: false
  proxies:
  - DIRECT
  use:
  - WAN-A
  - WAN-B
  url: http://www.gstatic.com/generate_204
  interval: '99'
rule-providers:
  Master-Umum:
    type: file
    behavior: domain
    path: "./rule_provider/master-umum.yaml"
  Master-Direct:
    type: file
    behavior: domain
    path: "./rule_provider/master-direct.yaml"
  Master-Game:
    type: file
    behavior: domain
    path: "./rule_provider/master-game.yaml"
script:
  code: |
    def main(ctx, metadata):
        ruleset_action = {"Master-Umum": "SIMASTER-V1.5",
            "Master-Direct": "DIRECT",
            "Master-Game": "PORT-GAME",
          }

        port = int(metadata["dst_port"])

        if metadata["network"] == "UDP":
            if port == "21,22,23,53,80,81,443,853,5353,8000,8008,8080,8081,8090,8443,8888":
                ctx.log('[Script] matched QUIC traffic use SIMASTER-V1.5')
                return "SIMASTER-V1.5"

        if metadata["dst_ip"] == "":
            metadata["dst_ip"] = ctx.resolve_ip(metadata["host"])

        port_list = [21, 22, 23, 53, 80, 81, 123, 443, 853, 1443, 5353, 8000, 8008, 8080, 8081, 8090, 8443, 8888]
        if port not in port_list:
            ctx.log('[Script] not common port use PORT-GAME')
            return "PORT-GAME"

        if metadata["dst_ip"] == "":
            return "SIMASTER-V1.5"

        for ruleset in ruleset_action:
            if ctx.rule_providers[ruleset].match(metadata):
                return ruleset_action[ruleset]

        code = ctx.geoip(metadata["dst_ip"])
        if code == "ID":
            ctx.log('[Script] Geoip ID')
            return "SIMASTER-V1.5"

        ctx.log('[Script] SIMASTER-V1.5')
        return "SIMASTER-V1.5"
rules:
- IP-CIDR,198.18.0.1/16,REJECT,no-resolve
- RULE-SET,Master-Umum,SIMASTER-V1.5
- RULE-SET,Master-Direct,DIRECT
- GEOIP,ID,SIMASTER-V1.5
- MATCH,SIMASTER-V1.5
tun:
  enable: true
  stack: system
  dns-hijack:
  - tcp://8.8.8.8:53
  - tcp://8.8.4.4:53
profile:
  store-selected: true
  store-fake-ip: true
secret: reyre
bind-address: "*"
